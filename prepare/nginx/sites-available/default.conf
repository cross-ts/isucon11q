# See: http://nginx.org/en/docs/http/ngx_http_map_module.html#map
map $http_user_agent $bot {
  default 0;
  "~bot" 1;
}

# See: http://nginx.org/en/docs/http/ngx_http_upstream_module.html#upstream
upstream local {
  # See: http://nginx.org/en/docs/http/ngx_http_upstream_module.html#server
  server unix:/tmp/puma.sock fail_timeout=0;

  # See: http://nginx.org/en/docs/http/ngx_http_upstream_module.html#keepalive
  keepalive 128;
}

upstream app {
  server 192.168.0.1 weight=1;
  server 192.168.0.2 weight=2;
  server 192.168.0.3 weight=3;
  keepalive 16;

  # See: http://nginx.org/en/docs/http/ngx_http_upstream_module.html#sticky
  #sticky srv_id;
}

# See: http://nginx.org/en/docs/http/ngx_http_proxy_module.html#proxy_cache_path
proxy_cache_path /dev/shm/nginx_cache levels=1 keys_zone=zone1:1m max_size=1g inactive=1h;
proxy_temp_path /dev/shm/nginx_temp;

# See: http://nginx.org/en/docs/http/ngx_http_core_module.html#server
server {
  # See: http://nginx.org/en/docs/http/ngx_http_core_module.html#server_name
  server_name _;

  # See: http://nginx.org/en/docs/http/ngx_http_core_module.html#listen
  listen 80;
  listen 443 ssl http2 default_server;
  listen [::]:80;
  listen [::]:443 ssl default_server;

  # See: http://nginx.org/en/docs/http/ngx_http_ssl_module.html#ssl_protocols
  # NOTE: https://ssl-config.mozilla.org/
  ssl_protocols TLSv1.2 TLSv1.3;

  # See: http://nginx.org/en/docs/http/ngx_http_ssl_module.html#ssl_ciphers
  ssl_ciphers 'ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384';

  # See: http://nginx.org/en/docs/http/ngx_http_ssl_module.html#ssl_certificate
  ssl_certificate /etc/nginx/ssl/fullchain.pem;

  # See: http://nginx.org/en/docs/http/ngx_http_ssl_module.html#ssl_certificate_key
  ssl_certificate_key /etc/nginx/ssl/privkey.pem;

  # See: http://nginx.org/en/docs/http/ngx_http_proxy_module.html#proxy_set_header
  proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
  proxy_set_header X-Forwarded-Proto $scheme;
  proxy_set_header Host $http_host;

  # See: http://nginx.org/en/docs/http/ngx_http_proxy_module.html#proxy_http_version
  proxy_http_version 1.1;

  # See: http://nginx.org/en/docs/http/ngx_http_core_module.html#root
  root /var/www/html;

  # See: http://nginx.org/en/docs/http/ngx_http_index_module.html#index
  index index.html;

  if ($bot = 1) {
    return 503;
  }

  # See: http://nginx.org/en/docs/http/ngx_http_core_module.html#location
  # NOTE: Also, using the "=" modifier it is possible to define an exact match of URI and location.
  #       If an exact match is found, the search terminates.
  location = /initialize {
    # See: http://nginx.org/en/docs/http/ngx_http_core_module.html#try_files
    try_files $uri @local;
  }

  location ^~ /api {
    try_files $uri @local;
  }

  location = /api/json {
    # See: http://nginx.org/en/docs/http/ngx_http_core_module.html#alias
    alias /home/isucon/git/isucon/webapp/example.json;
  }

  # NOTE: The sample does not pass here due to the regular expression.
  location ~ /api/examples/([0-9]+)$ {
    # See: http://nginx.org/en/docs/http/ngx_http_proxy_module.html#proxy_pass
    proxy_pass http://app/api/examples/$1;

    # See: http://nginx.org/en/docs/http/ngx_http_proxy_module.html#proxy_cache
    proxy_cache zone1;

    # http://nginx.org/en/docs/http/ngx_http_proxy_module.html#proxy_cache_key
    proxy_cache_key $proxy_host$request_uri$args;

    # http://nginx.org/en/docs/http/ngx_http_proxy_module.html#proxy_cache_valid
    proxy_cache_valid 200 5m;

    # See: https://nginx.org/en/docs/http/ngx_http_headers_module.html#add_header
    add_header X-Nginx-Cache $upstream_cache_status;
  }

  location /js/ {
    root /home/isucon/git/isucon/public;

    # See: http://nginx.org/en/docs/http/ngx_http_headers_module.html#expires
    expires 1d;
  }

  location / {
    try_files $uri $uri/index.html =404;
  }

  location ^~ /stackprof {
    rewrite ^(.*)$ http://$host:9292 redirect;
  }

  location ^~ /netdata {
    rewrite ^(.*)$ http://$host:19999 redirect;
  }

  location @local {
    proxy_pass http://local;
  }

  location @app {
    proxy_pass http://app;
  }

  location ~ /\.ht {
    # See: http://nginx.org/en/docs/http/ngx_http_access_module.html#deny
    deny all;
  }
}
