# > This value controls the maximum number of threads that can be created
# > using fork().
# >
# > During initialization the kernel sets this value such that even if the
# > maximum number of threads is created, the thread structures occupy only
# > a part (1/8th) of the available RAM pages.
#
# See: https://www.kernel.org/doc/Documentation/sysctl/kernel.txt
kernel.threads-max = 32768

# > The value in file-max denotes the maximum number of file-
# > handles that the Linux kernel will allocate. When you get lots
# > of error messages about running out of file handles, you might
# > want to increase this limit.
#
# See: https://www.kernel.org/doc/Documentation/sysctl/fs.txt
fs.file-max = 655350

#	> Defines the local port range that is used by TCP and UDP to
# > choose the local port. The first number is the first, the
# > second the last local port number.
# > If possible, it is better these numbers have different parity
# > (one even and one odd value).
# > Must be greater than or equal to ip_unprivileged_port_start.
# > The default values are 32768 and 60999 respectively.
#
# See: https://www.kernel.org/doc/Documentation/networking/ip-sysctl.txt
net.ipv4.ip_local_port_range = 1024 65535

# > limit of socket listen() backlog, known in userspace as SOMAXCONN.
# > Defaults to 4096. (Was 128 before linux-5.4)
# > See also tcp_max_syn_backlog for additional tuning for TCP sockets.
#
# See: https://www.kernel.org/doc/Documentation/networking/ip-sysctl.txt
net.core.somaxconn = 65535

# > Maximal number of remembered connection requests (SYN_RECV),
# > which have not received an acknowledgment from connecting client.
# > This is a per-listener limit.
# > The minimal value is 128 for low memory machines, and it will
# > increase in proportion to the memory of machine.
# > If server suffers from overload, try increasing this number.
# > Remember to also check /proc/sys/net/core/somaxconn
# > A SYN_RECV request socket consumes about 304 bytes of memory.
#
# See: https://www.kernel.org/doc/Documentation/networking/ip-sysctl.txt
net.ipv4.tcp_max_syn_backlog = 65535

# > Maximum number  of  packets,  queued  on  the  INPUT  side, when the interface
# > receives packets faster than kernel can process them.
#
# See: https://www.kernel.org/doc/Documentation/sysctl/net.txt
net.core.netdev_max_backlog = 16384

# > Enable reuse of TIME-WAIT sockets for new connections when it is
# > safe from protocol viewpoint.
# > 0 - disable
# > 1 - global enable
# > 2 - enable for loopback traffic only
# > It should not be changed without advice/request of technical
# > experts.
# > Default: 2
#
# See: https://www.kernel.org/doc/Documentation/networking/ip-sysctl.txt
net.ipv4.tcp_tw_reuse = 1

# > The length of time an orphaned (no longer referenced by any
# > application) connection will remain in the FIN_WAIT_2 state
# > before it is aborted at the local end.  While a perfectly
# > valid "receive only" state for an un-orphaned connection, an
# > orphaned connection in FIN_WAIT_2 state could otherwise wait
# > forever for the remote to close its end of the connection.
# > Cf. tcp_max_orphans
# > Default: 60 seconds
#
# See: https://www.kernel.org/doc/Documentation/networking/ip-sysctl.txt
net.ipv4.tcp_fin_timeout = 10

# > If set, provide RFC2861 behavior and time out the congestion
# > window after an idle period.  An idle period is defined at
# > the current RTO.  If unset, the congestion window will not
# > be timed out after an idle period.
# > Default: 1
#
# See: https://www.kernel.org/doc/Documentation/networking/ip-sysctl.txt
net.ipv4.tcp_slow_start_after_idle = 0


# > If set, the TCP stack behaves conforming to RFC1337. If unset,
# > we are not conforming to RFC, but prevent TCP TIME_WAIT
# > assassination.
# > Default: 0
#
# See: https://www.kernel.org/doc/Documentation/networking/ip-sysctl.txt
net.ipv4.tcp_rfc1337 = 1

# > Disable IPv6 operation.  If accept_dad is set to 2, this value
# > will be dynamically set to TRUE if DAD fails for the link-local
# > address.
# > Default: FALSE (enable IPv6 operation)
#
# See: https://www.kernel.org/doc/Documentation/networking/ip-sysctl.txt
#net.ipv6.conf.all.disable_ipv6=1
#net.ipv6.conf.default.disable_ipv6=1

# > Only valid when the kernel was compiled with CONFIG_SYN_COOKIES
# > Send out syncookies when the syn backlog queue of a socket
# > overflows. This is to prevent against the common 'SYN flood attack'
# > Default: 1
#
# See: https://www.kernel.org/doc/Documentation/networking/ip-sysctl.txt
net.ipv4.tcp_syncookies = 0
